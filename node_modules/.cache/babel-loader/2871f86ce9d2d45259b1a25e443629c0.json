{"ast":null,"code":"import _slicedToArray from \"E:\\\\Lambda\\\\Week 11\\\\dark-mode\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\n\nvar useLocalStorage = function useLocalStorage(key, initialValue) {\n  var _useState = useState(function () {\n    var item = window.localStorage.getItem(key);\n    return item ? JSON.parse(item) : initialValue;\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      storedValue = _useState2[0],\n      setStoredValue = _useState2[1];\n\n  var setValue = function setValue(value) {\n    setStoredValue(value);\n    window.localStorage.setItem(key, JSON.stringify(value));\n  };\n\n  return [storedValue, setValue];\n}; // export default function useLocalStorage() {\n//     return (\n//         <div>\n//         </div>\n//     )\n// }\n\n\nexport default useLocalStorage;","map":{"version":3,"sources":["E:\\Lambda\\Week 11\\dark-mode\\src\\hooks\\useLocalStorage.jsx"],"names":["React","useState","useLocalStorage","key","initialValue","item","window","localStorage","getItem","JSON","parse","storedValue","setStoredValue","setValue","value","setItem","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAMC,YAAN,EAAuB;AAAA,kBACHH,QAAQ,CAAC,YAAM;AACnD,QAAMI,IAAI,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BL,GAA5B,CAAb;AACA,WAAOE,IAAI,GAAGI,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAH,GAAsBD,YAAjC;AACH,GAH+C,CADL;AAAA;AAAA,MACnCO,WADmC;AAAA,MACtBC,cADsB;;AAM3C,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACtBF,IAAAA,cAAc,CAACE,KAAD,CAAd;AACAR,IAAAA,MAAM,CAACC,YAAP,CAAoBQ,OAApB,CAA4BZ,GAA5B,EAAiCM,IAAI,CAACO,SAAL,CAAeF,KAAf,CAAjC;AACH,GAHD;;AAIA,SAAO,CAACH,WAAD,EAAcE,QAAd,CAAP;AACH,CAXD,C,CAaA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,eAAeX,eAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst useLocalStorage = (key, initialValue) => {\r\n    const [ storedValue, setStoredValue ] = useState(() => {\r\n        const item = window.localStorage.getItem(key);\r\n        return item ? JSON.parse(item) : initialValue;\r\n    });\r\n\r\n    const setValue = value => {\r\n        setStoredValue(value);\r\n        window.localStorage.setItem(key, JSON.stringify(value));\r\n    };\r\n    return [storedValue, setValue];\r\n};\r\n\r\n// export default function useLocalStorage() {\r\n//     return (\r\n//         <div>\r\n            \r\n//         </div>\r\n//     )\r\n// }\r\n\r\nexport default useLocalStorage"]},"metadata":{},"sourceType":"module"}